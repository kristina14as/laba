


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** 303osASM.s ***************
    2 00000000         ;
    3 00000000         ; EE383 S16
    4 00000000         ; James Lumpp
    5 00000000         ; 4/11/2016
    6 00000000         ;
    7 00000000         ; Useful declarations
    8 00000000         
    9 00000000 4002541C 
                       GPIO_PORTF_ICR_R
                               EQU              0x4002541C  ; interrupt flag fo
                                                            r PortF
   10 00000000         
   11 00000000 00000000 
                       SWITCH_COUNT
                               EQU              0           ; Number of SYstick
                                                             interrupts before 
                                                            a context switch
   12 00000000 FFFFFFF9 
                       INTERRUPT_LR
                               EQU              0xfffffff9  ; Number of SYstick
                                                             interrupts before 
                                                            a context switch
   13 00000000                 THUMB
   14 00000000         
   15 00000000         
   16 00000000                 AREA             DATA, ALIGN=2
   17 00000000         ; Global variables go here
   18 00000000         
   19 00000000 00 00 00 
              00       INT_COUNT
                               SPACE            4
   20 00000004         
   21 00000004                 EXTERN           Schedule
   22 00000004         
   23 00000004                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   24 00000004                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000         
   26 00000000                 EXPORT           GPIOPortF_Handler
   27 00000000                 EXPORT           StartNewTask
   28 00000000         
   29 00000000         GPIOPortF_Handler
   30 00000000         ; This isr will context switch every SWITCH_COUNT ticks
   31 00000000 4814            ldr              r0, =GPIO_PORTF_ICR_R
   32 00000002 F04F 0110       mov              r1, #0x10
   33 00000006 6001            str              r1,[r0]     ; acknowledge flag4
                                                            
   34 00000008 4813            ldr              r0,=INT_COUNT
   35 0000000A 6801            ldr              r1,[r0]
   36 0000000C 1E49            subs             r1,r1,#1
   37 0000000E D301            blo              context_sw  ; perform context s
                                                            witch
   38 00000010 6001            str              r1,[r0]
   39 00000012 4770            bx               lr          ; return from ISR
   40 00000014         context_sw
   41 00000014 F04F 0100       mov              r1,#SWITCH_COUNT



ARM Macro Assembler    Page 2 


   42 00000018 6001            str              r1,[r0]     ;reset INT_COUNT
   43 0000001A E92D 0FF0       push{r4-r11}                 ; save rest of stat
                                                            e of the task swith
                                                            cing out
   44 0000001E 4668            mov              r0,sp
   45 00000020 F7FF FFFE       bl               Schedule    ; will call schedul
                                                            er to select new ta
                                                            sk
   46 00000024 4685            mov              sp,r0       ; load new tasks sp
                                                            
   47 00000026 E8BD 0FF0       pop              {r4-r11}
   48 0000002A F06F 0E06       ldr              lr,=INTERRUPT_LR
   49 0000002E 4770            bx               lr          ; context switch!
   50 00000030         
   51 00000030                 ALIGN
   52 00000030         
   53 00000030         StartNewTask
   54 00000030 4685            mov              sp,r0       ; stack top for thi
                                                            s new task
   55 00000032 F04F 7280       mov              r2,#0x01000000
   56 00000036 B404            push             {r2}        ; PSR (mark as thum
                                                            b)
   57 00000038 B402            push             {r1}        ; PC start address 
                                                            of the task
   58 0000003A 4908            ldr              r1, =task_exit
   59 0000003C B402            push             {r1}        ; LR (if task ever 
                                                            returns)
   60 0000003E F04F 0100       mov              r1,#0       ; don't care value 
                                                            of 0 for the other 
                                                            regs
   61 00000042 B402            push             {r1}        ; r12
   62 00000044 B402            push             {r1}        ; r3 could be arg t
                                                            o func
   63 00000046 B402            push             {r1}        ; r2 could be arg t
                                                            o func
   64 00000048 B402            push             {r1}        ; r1 could be arg t
                                                            o func
   65 0000004A B402            push             {r1}        ; r0 could be arg t
                                                            o func
   66 0000004C F06F 0E06       ldr              lr,=INTERRUPT_LR
   67 00000050 4770            bx               lr          ; context switch to
                                                             this new tas
   68 00000052         
   69 00000052         task_exit
   70 00000052 E7FE            b                task_exit   ; if a task ever re
                                                            turns it 
   71 00000054         ; gets stuck here for debugging
   72 00000054         
   73 00000054                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned (For the c
                                                            ode/data to follow)
                                                            
   74 00000054                 END                          ; mark end of file
              4002541C 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\objects\383osasm.d -o.\objects\383osasm.o -I"C:\Users\Kristina\D



ARM Macro Assembler    Page 3 


ocuments\UK\ee 383\lab A\EE383S16OS\EE383S16OS\RTE" -IC:\Keil_v5\ARM\PACK\Keil\
TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CMSIS\Include --predefin
e="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSIO
N SETA 517" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\383osasm.lst 38
3osASM.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 16 in file 383osASM.s
   Uses
      None
Comment: DATA unused
INT_COUNT 00000000

Symbol: INT_COUNT
   Definitions
      At line 19 in file 383osASM.s
   Uses
      At line 34 in file 383osASM.s
Comment: INT_COUNT used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file 383osASM.s
   Uses
      None
Comment: .text unused
GPIOPortF_Handler 00000000

Symbol: GPIOPortF_Handler
   Definitions
      At line 29 in file 383osASM.s
   Uses
      At line 26 in file 383osASM.s
Comment: GPIOPortF_Handler used once
StartNewTask 00000030

Symbol: StartNewTask
   Definitions
      At line 53 in file 383osASM.s
   Uses
      At line 27 in file 383osASM.s
Comment: StartNewTask used once
context_sw 00000014

Symbol: context_sw
   Definitions
      At line 40 in file 383osASM.s
   Uses
      At line 37 in file 383osASM.s
Comment: context_sw used once
task_exit 00000052

Symbol: task_exit
   Definitions
      At line 69 in file 383osASM.s
   Uses
      At line 58 in file 383osASM.s
      At line 70 in file 383osASM.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_ICR_R 4002541C

Symbol: GPIO_PORTF_ICR_R
   Definitions
      At line 9 in file 383osASM.s
   Uses
      At line 31 in file 383osASM.s
Comment: GPIO_PORTF_ICR_R used once
INTERRUPT_LR FFFFFFF9

Symbol: INTERRUPT_LR
   Definitions
      At line 12 in file 383osASM.s
   Uses
      At line 48 in file 383osASM.s
      At line 66 in file 383osASM.s

SWITCH_COUNT 00000000

Symbol: SWITCH_COUNT
   Definitions
      At line 11 in file 383osASM.s
   Uses
      At line 41 in file 383osASM.s
Comment: SWITCH_COUNT used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Schedule 00000000

Symbol: Schedule
   Definitions
      At line 21 in file 383osASM.s
   Uses
      At line 45 in file 383osASM.s
Comment: Schedule used once
1 symbol
347 symbols in table
